{
	"name": "Enrollment Bronze",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "myspark",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "fcd54a54-9479-4dd1-af47-151c5f91630a"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/201fa29b-5672-4347-9909-fa57d294b356/resourceGroups/synapsejrs/providers/Microsoft.Synapse/workspaces/synapsejrs/bigDataPools/myspark",
				"name": "myspark",
				"type": "Spark",
				"endpoint": "https://synapsejrs.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/myspark",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"from pyspark.sql.types import StringType, FloatType, IntegerType, StructType, StructField, BooleanType, DecimalType\n",
					"\n",
					"schemaEnrollment = StructType(\n",
					"[StructField('BillingAccountId', StringType(), True),\n",
					"StructField('BillingAccountName', StringType(), True),\n",
					"StructField('BillingPeriodStartDate', StringType(), True),\n",
					"StructField('BillingPeriodEndDate', StringType(), True),\n",
					"StructField('BillingProfileId', StringType(), True),\n",
					"StructField('BillingProfileName', StringType(), True),\n",
					"StructField('AccountOwnerId', StringType(), True),\n",
					"StructField('AccountName', StringType(), True),\n",
					"StructField('SubscriptionId', StringType(), True),\n",
					"StructField('SubscriptionName', StringType(), True),\n",
					"StructField('Date', StringType(), True),\n",
					"StructField('Product', StringType(), True),\n",
					"StructField('PartNumber', StringType(), True),\n",
					"StructField('MeterId', StringType(), True),\n",
					"StructField('ServiceFamily', StringType(), True),\n",
					"StructField('MeterCategory', StringType(), True),\n",
					"StructField('MeterSubCategory', StringType(), True),\n",
					"StructField('MeterRegion', StringType(), True),\n",
					"StructField('MeterName', StringType(), True),\n",
					"StructField('Quantity', FloatType(), True),\n",
					"StructField('EffectivePrice', FloatType(), True),\n",
					"StructField('Cost', FloatType(), True),\n",
					"StructField('UnitPrice', FloatType(), True),\n",
					"StructField('BillingCurrency', StringType(), True),\n",
					"StructField('ResourceLocation', StringType(), True),\n",
					"StructField('AvailabilityZone', StringType(), True),\n",
					"StructField('ConsumedService', StringType(), True),\n",
					"StructField('ResourceId', StringType(), True),\n",
					"StructField('ResourceName', StringType(), True),\n",
					"StructField('ServiceInfo1', StringType(), True),\n",
					"StructField('ServiceInfo2', StringType(), True),\n",
					"StructField('AdditionalInfo', StringType(), True),\n",
					"StructField('Tags', StringType(), True),\n",
					"StructField('InvoiceSectionId', StringType(), True),\n",
					"StructField('InvoiceSection', StringType(), True),\n",
					"StructField('CostCenter', StringType(), True),\n",
					"StructField('UnitOfMeasure', StringType(), True),\n",
					"StructField('ResourceGroup', StringType(), True),\n",
					"StructField('ReservationId', StringType(), True),\n",
					"StructField('ReservationName', StringType(), True),\n",
					"StructField('ProductOrderId', StringType(), True),\n",
					"StructField('ProductOrderName', StringType(), True),\n",
					"StructField('OfferId', StringType(), True),\n",
					"StructField('IsAzureCreditEligible', BooleanType(), True),\n",
					"StructField('Term', StringType(), True),\n",
					"StructField('PublisherName', StringType(), True),\n",
					"StructField('PlanName', StringType(), True),\n",
					"StructField('ChargeType', StringType(), True),\n",
					"StructField('Frequency', StringType(), True),\n",
					"StructField('PublisherType', StringType(), True)]\n",
					")"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"source": [
					"from pyspark.sql.functions import to_date, input_file_name, col, split\n",
					"\n",
					"fileName = 'abfss://synapselake@synapselakejrs.dfs.core.windows.net/enrollment/*.csv'\n",
					"\n",
					"df = (spark.read\n",
					"       .option(\"sep\", \",\")\n",
					"       .option(\"escape\",\"\\\"\")\n",
					"       .option(\"header\", \"true\")\n",
					"       .option(\"encoding\", \"UTF-8\")\n",
					"       .csv(fileName)\n",
					"       )\n",
					"\n",
					"df = (\n",
					"       df\n",
					"       .withColumn(\"BillingPeriodStartDate\", to_date(\"BillingPeriodStartDate\", \"MM/dd/yyyy\"))\n",
					"       .withColumn(\"BillingPeriodEndDate\", to_date(\"BillingPeriodEndDate\", \"MM/dd/yyyy\"))\n",
					"       .withColumn(\"Date\", to_date(\"Date\", \"MM/dd/yyyy\"))\n",
					"       .withColumn(\"Cost\", df[\"Cost\"].cast(\"float\"))\n",
					"       .withColumn(\"Quantity\", df[\"Quantity\"].cast(\"float\"))\n",
					"       .withColumn(\"EffectivePrice\", df[\"EffectivePrice\"].cast(\"float\"))\n",
					"       .withColumn(\"UnitPrice\", df[\"UnitPrice\"].cast(\"float\"))\n",
					"      )\n",
					""
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"bronzeParquet = 'abfss://synapselake@synapselakejrs.dfs.core.windows.net/enrollment/Bronze/enrollment'\r\n",
					"bronzeDelta = 'abfss://synapselake@synapselakejrs.dfs.core.windows.net/enrollment/Bronze/delta/enrollment'"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"#df.write.mode(\"overwrite\").format(\"parquet\").save(bronzeParquet)"
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"source": [
					"#df = spark.read.format(\"parquet\").load(bronzeParquet)"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"source": [
					"df.write.mode(\"overwrite\").format(\"delta\").save(bronzeDelta)"
				],
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"diagram": {
						"activateDiagramType": 1,
						"chartConfig": {
							"category": "bar",
							"keys": [],
							"values": [],
							"yLabel": "",
							"xLabel": "",
							"aggregation": "SUM",
							"aggByBackend": false
						},
						"isSummary": false,
						"previewData": {
							"filter": null
						},
						"isSql": true
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"DROP TABLE IF EXISTS enrollment"
				],
				"execution_count": 8
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"diagram": {
						"activateDiagramType": 1,
						"chartConfig": {
							"category": "bar",
							"keys": [],
							"values": [],
							"yLabel": "",
							"xLabel": "",
							"aggregation": "SUM",
							"aggByBackend": false
						},
						"isSummary": false,
						"previewData": {
							"filter": null
						},
						"isSql": true
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"CREATE TABLE enrollment\n",
					"USING DELTA\n",
					"LOCATION 'abfss://synapselake@synapselakejrs.dfs.core.windows.net/enrollment/Bronze/delta/enrollment'"
				],
				"execution_count": 9
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"OPTIMIZE enrollment"
				],
				"execution_count": 11
			},
			{
				"cell_type": "code",
				"source": [
					""
				],
				"execution_count": null
			}
		]
	}
}